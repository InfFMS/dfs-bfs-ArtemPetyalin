# Напишите алгоритм поиска в глубину (DFS)
#
# Формат входных данных:
# Граф задаётся в виде словаря, где ключи — вершины, а значения — списки смежных вершин.
#
# Обход начинается с заданной стартовой вершины.
# Требуется:
# 1.Реализовать DFS (Depth-First Search) — обход графа в глубину.
# 2.Вернуть список вершин в порядке их посещения.

# Пример входных данных
# graph = {
#     1: [2, 3],
#     2: [1, 4],
#     3: [1, 5],
#     4: [2],
#     5: [3]
# }
# start = 1
#
# Пример выходных данных
# [1, 2, 4, 3, 5]  # Возможен и другой порядок, зависящий от реализации DFS

graph = {1:[2], 2:[3, 5], 3:[4, 6], 4:[5, 6], 5:[2, 4], 6:[3, 4]}
answer = []
start = int(input('start '))

def depth_serach(graph, loc):

    if loc not in answer:
        answer.append(loc)

        for branch in graph[loc]:
            depth_serach(graph, branch)

depth_serach(graph, start)
print(answer)



